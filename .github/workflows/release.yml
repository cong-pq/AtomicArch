name: Release

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build-and-test:
    name: Build and Test
    runs-on: macos-latest
    env:
      DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
      SCHEME: AtomicArch
      PLATFORM: iOS
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest
          
      - name: Cache Swift packages
        uses: actions/cache@v3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-
            
      - name: Resolve Swift Packages
        run: xcodebuild -resolvePackageDependencies -project AtomicArch.xcodeproj
          
      - name: Install xcpretty
        run: gem install xcpretty

      - name: Build and test
        run: |
          xcodebuild clean test \
            -project AtomicArch.xcodeproj \
            -scheme ${{ env.SCHEME }} \
            -destination 'platform=${{ env.PLATFORM }} Simulator,name=iPhone 16 Pro,OS=latest' \
            -enableCodeCoverage YES | xcpretty
          
  create-release:
    name: Create Release
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
        
      - name: Generate changelog
        id: changelog
        uses: mikepenz/release-changelog-builder-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "categories": [
                {
                  "title": "## 🚀 Features",
                  "labels": ["feature", "enhancement"]
                },
                {
                  "title": "## 🐛 Fixes",
                  "labels": ["fix", "bug"]
                }
              ]
            }
          
      - name: Process release template
        id: release_template
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          CHANGELOG="${{ steps.changelog.outputs.changelog }}"
          TEMPLATE=$(cat .github/release-template.md)
          TEMPLATE="${TEMPLATE//\$\{VERSION\}/$VERSION}"
          TEMPLATE="${TEMPLATE//\$\{CHANGELOG\}/$CHANGELOG}"
          echo "$TEMPLATE" > release_notes.md
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: AtomicArch ${{ steps.get_version.outputs.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}